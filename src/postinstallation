#!/bin/bash

if [ -z "$1" ]; then
    echo "Usage: $0 <repository-url>"
    exit 1
fi

echo
echo " Postinstallation"
echo "------------------"
echo

echo "- Dotfiles setup"
echo

cd $HOME || { echo "Failed to cd $HOME"; exit 1; }

read -p "This program will move all the things in $HOME to .backup/ for dotfile installation. Proceed? (y/N) " confirm
if [[ $confirm != "y" ]]; then
    { echo "Aborting."; exit 1; }
fi

# Create a backup directory if it doesn't exist
mkdir -p .backup

# Move existing files to the backup directory
echo "Moving existing files in $HOME to .backup/..."
for file in .* *; do
    # Skip the backup directory itself and the current directory
    if [[ "$file" != ".backup" && "$file" != "." && "$file" != ".." ]]; then
        mv "$file" .backup/ || { echo "Failed to move $file to .backup."; exit 1; }
    fi
done

alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
echo ".dotfiles" >> .gitignore

# Clone the bare repository
echo "Cloning repository..."
git clone --bare "$1" --depth 1 $HOME/.dotfiles || { echo "Failed to clone repository."; exit 1; }

# Checkout the dotfiles
echo "Checking out dotfiles..."
dotfiles checkout || { echo "Failed to checkout dotfiles."; exit 1; }

dotfiles config --local status.showUntrackedFiles no
echo "Dotfile setup complete"
echo

### IMPORTANT DIRS ###

echo "- Dirs setup"

# Directory array

folders=(
    "$HOME/Documents" "$HOME/Downloads" "$HOME/Files" \
    "$HOME/Pictures" "$HOME/Repos" "$HOME/Videos" \
    "$HOME/Pictures/Screenshots"
)

# Loop through the array and create folders
for folder in "${folders[@]}"; do
  mkdir -p "$folder" # -p ensures no error if the folder already exists
  echo "Created folder: $folder"
done

echo "Created important dirs"
echo

### Package setup ###

echo "- installing packages."
echo

# Define the path to the packages file
package_file="$HOME/packages"

# Check if the file exists
if [[ ! -f "$package_file" ]]; then
  echo "Error: The file $package_file does not exist."
  exit 1
fi

# Read the file line by line and install each package
while IFS= read -r package; do
  if [[ -n "$package" && ! "$package" =~ ^# ]]; then # Ignore empty lines and comments
    echo "Installing package: $package"

    # Install the package using pacman
    sudo pacman -S --noconfirm "$package"

    if [[ $? -eq 0 ]]; then
      echo "Successfully installed $package"
    else
      echo "Error installing $package"
    fi
  fi
done < "$package_file"

echo "Packages installed."
echo

echo "Post installation complete."
echo
